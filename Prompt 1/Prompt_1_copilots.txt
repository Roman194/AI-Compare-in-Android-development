Отлично! Создай пожалуйста UI Compose навигацию для Android-приложения "The Cupcake app". Это приложение имеет 4 раздельных экрана и пользователь может 
переходить от одного к другому в процессе заказа капкейков. Стартовый экран - StartOrderScreen, где пользователь выбирает количество заказываемых капкейков.
Когда пользователь выбрал нужное ему количество капкейков, открывается экран Choose flavor Screen, где пользователь выбирает их вкус. Когда он выберет один 
из доступных вкусов, открывается экран Choose Pickup Date screen, где он выбирает дату, в которую прийдёт за заказом. После выбора одной из возможных дат, 
открывается экран Order Summary Screen, где пользователь может проверить все детали заказа и подтвердить заказ (функция подтверждения пока что не реализована
и достаточно просто поставить в этом месте TODO). 

Пользователь может отказаться от заказа на любом экране, кроме первого. В этом случае (onCancelButtonClicked) необходимо отменить заказ (вызов функции
resetOrder() из orderViewModel) и вернуться на стартовую страницу. Это должно быть реализовано с помощью private функции cancelOrderAndNavigateToStart. 

Также на любом экране, кроме первого, пользователь может вернуться на предыдущий экран. Для этого используется функция navigateUp из Composable-функции 
CupcakeAppBar.

Все UI-представления экранов реализованы в рамках Composable-функций. Для первого это StartOrderScreen (в файле StartOrderScreen.kt), для второго и третьего -
SelectOptionScreen из одноимённого файла и для четвёртого это OrderSummaryScreen (в файле SummaryScreen.kt). 

Навигацию необходимо реализовать в рамках Composable-функции CupcakeApp внутри Scaffold. Также в рамках реализации необходимо использовать enum class
CupcakeScreen. Этот enum class, а также начальное состояние Composable-функций CupcakeApp и CupcakeAppBar, которые необходимо модифицировать ты можешь найти
в файле CupcakeScreen.kt.
Импорты в решении выводить не требуется.
 
Также хочу обрать твоё внимание, что это задание рассматривается в официальном туториале (codelab) на официальном сайте для разработчиков android. Можешь
им воспользоваться для лучшего понимания контекста задачи и генерации решения. Заранее благодарю за помощь!

Scaffold(
        topBar = {
            CupcakeAppBar(
                canNavigateBack = false,
                navigateUp = { /* TODO: implement back navigation */ }
            )
        }
    ) { innerPadding ->
        val uiState by viewModel.uiState.collectAsState()
        innerPadding
        //Navigation should be added here
    }